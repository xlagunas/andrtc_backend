buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
        retrofitVersion = '2.3.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

String getLeastVersionNumber() {
    return System.getenv('TRAVIS_BUILD_NUMBER') ?: 'local'
}

bootJar {
    launchScript()
}

version = '0.3.0.' + getLeastVersionNumber()

def javaVersion = JavaVersion.VERSION_1_8;
sourceCompatibility = javaVersion;
targetCompatibility = javaVersion;

repositories {
    mavenCentral()
}

jar {
    archiveName = 'andRTC.jar'
}

test {
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}


dependencies {
    compile 'org.springframework.boot:spring-boot-starter-jdbc:' + springBootVersion
    compile 'org.springframework.boot:spring-boot-starter-security:' + springBootVersion
    compile 'org.springframework.boot:spring-boot-starter-web:' + springBootVersion
    compile 'org.springframework.boot:spring-boot-starter-actuator:' + springBootVersion
    compile 'io.jsonwebtoken:jjwt:0.7.0'
    compile 'com.google.guava:guava:22.0'
    compile 'com.squareup.retrofit2:retrofit:' + retrofitVersion
    compile 'com.squareup.retrofit2:converter-jackson:' + retrofitVersion
    compile 'com.squareup.retrofit2:adapter-java8:' + retrofitVersion
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'

    runtime 'mysql:mysql-connector-java:8.0.15'

    testCompile 'org.springframework.boot:spring-boot-starter-test:' + springBootVersion
    testCompile 'com.h2database:h2:1.4.196'
    testCompile 'org.assertj:assertj-core:3.8.0'
}
